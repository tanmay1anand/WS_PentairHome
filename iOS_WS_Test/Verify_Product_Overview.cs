///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace iOS_WS_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Product_Overview recording.
    /// </summary>
    [TestModule("1e42c8b8-8107-4f25-ab35-9a7c3bf135f8", ModuleType.Recording, 1)]
    public partial class Verify_Product_Overview : ITestModule
    {
        /// <summary>
        /// Holds an instance of the iOS_WS_TestRepository repository.
        /// </summary>
        public static iOS_WS_TestRepository repo = iOS_WS_TestRepository.Instance;

        static Verify_Product_Overview instance = new Verify_Product_Overview();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Product_Overview()
        {
            Manufacturer = " Pentair";
            Device_ID = "PNR01XTR10000030A3";
            Model = " XTR2";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Product_Overview Instance
        {
            get { return instance; }
        }

#region Variables

        string _Manufacturer;

        /// <summary>
        /// Gets or sets the value of variable Manufacturer.
        /// </summary>
        [TestVariable("a5470a0b-5121-4146-82cb-2552db411185")]
        public string Manufacturer
        {
            get { return _Manufacturer; }
            set { _Manufacturer = value; }
        }

        string _Device_ID;

        /// <summary>
        /// Gets or sets the value of variable Device_ID.
        /// </summary>
        [TestVariable("0b9255a6-b4a8-444b-b52c-1231757a6662")]
        public string Device_ID
        {
            get { return _Device_ID; }
            set { _Device_ID = value; }
        }

        string _Model;

        /// <summary>
        /// Gets or sets the value of variable Model.
        /// </summary>
        [TestVariable("16f1bc4c-62e0-4242-b000-5127a1fbcb86")]
        public string Model
        {
            get { return _Model; }
            set { _Model = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(0));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ProductOverview_Link' at Center", repo.ComPentairPentairhome.ProductOverview_LinkInfo, new RecordItemIndex(1));
            repo.ComPentairPentairhome.ProductOverview_Link.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(2));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='Product Overview') on item 'ComPentairPentairhome.ProductOverview_Header'.", repo.ComPentairPentairhome.ProductOverview_HeaderInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ComPentairPentairhome.ProductOverview_HeaderInfo, "AccessibilityLabel", "Product Overview");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ComPentairPentairhome.ProductOverview_Header'.", repo.ComPentairPentairhome.ProductOverview_HeaderInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ComPentairPentairhome.ProductOverview_HeaderInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Manufacturer') on item 'ComPentairPentairhome.ManufacturerPentair_field'.", repo.ComPentairPentairhome.ManufacturerPentair_fieldInfo, new RecordItemIndex(6));
            Validate.AttributeContains(repo.ComPentairPentairhome.ManufacturerPentair_fieldInfo, "AccessibilityLabel", "Manufacturer");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$Manufacturer) on item 'ComPentairPentairhome.ManufacturerPentair_field'.", repo.ComPentairPentairhome.ManufacturerPentair_fieldInfo, new RecordItemIndex(7));
            Validate.AttributeContains(repo.ComPentairPentairhome.ManufacturerPentair_fieldInfo, "AccessibilityLabel", Manufacturer);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Device ID ') on item 'ComPentairPentairhome.DeviceID'.", repo.ComPentairPentairhome.DeviceIDInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.ComPentairPentairhome.DeviceIDInfo, "AccessibilityLabel", "Device ID ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$Device_ID) on item 'ComPentairPentairhome.DeviceID'.", repo.ComPentairPentairhome.DeviceIDInfo, new RecordItemIndex(10));
            Validate.AttributeContains(repo.ComPentairPentairhome.DeviceIDInfo, "AccessibilityLabel", Device_ID);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Model ') on item 'ComPentairPentairhome.Model'.", repo.ComPentairPentairhome.ModelInfo, new RecordItemIndex(12));
            Validate.AttributeContains(repo.ComPentairPentairhome.ModelInfo, "AccessibilityLabel", "Model ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$Model) on item 'ComPentairPentairhome.Model'.", repo.ComPentairPentairhome.ModelInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.ComPentairPentairhome.ModelInfo, "AccessibilityLabel", Model);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(14));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
