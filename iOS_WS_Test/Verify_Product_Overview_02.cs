///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace iOS_WS_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Product_Overview_02 recording.
    /// </summary>
    [TestModule("a7c33fec-5116-411e-8dfd-47871ef3d7d1", ModuleType.Recording, 1)]
    public partial class Verify_Product_Overview_02 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the iOS_WS_TestRepository repository.
        /// </summary>
        public static iOS_WS_TestRepository repo = iOS_WS_TestRepository.Instance;

        static Verify_Product_Overview_02 instance = new Verify_Product_Overview_02();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Product_Overview_02()
        {
            var = "est WS Automation";
            Controller_Software_Version = "3.1.03.1892";
            IoT_Software_Version = "2.8";
            NickName = "est WS Automation";
            Address = "N/A";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Product_Overview_02 Instance
        {
            get { return instance; }
        }

#region Variables

        string _var;

        /// <summary>
        /// Gets or sets the value of variable var.
        /// </summary>
        [TestVariable("cfa10437-056a-43d3-8616-77c75659d72b")]
        public string var
        {
            get { return _var; }
            set { _var = value; }
        }

        string _Controller_Software_Version;

        /// <summary>
        /// Gets or sets the value of variable Controller_Software_Version.
        /// </summary>
        [TestVariable("b506c566-cdeb-4152-800f-fb7acdcd7f03")]
        public string Controller_Software_Version
        {
            get { return _Controller_Software_Version; }
            set { _Controller_Software_Version = value; }
        }

        string _IoT_Software_Version;

        /// <summary>
        /// Gets or sets the value of variable IoT_Software_Version.
        /// </summary>
        [TestVariable("6a3c517b-6138-4008-a298-30b00ecd0833")]
        public string IoT_Software_Version
        {
            get { return _IoT_Software_Version; }
            set { _IoT_Software_Version = value; }
        }

        string _NickName;

        /// <summary>
        /// Gets or sets the value of variable NickName.
        /// </summary>
        [TestVariable("707082ef-8944-4dca-8894-6acfa667ee2a")]
        public string NickName
        {
            get { return _NickName; }
            set { _NickName = value; }
        }

        string _Address;

        /// <summary>
        /// Gets or sets the value of variable Address.
        /// </summary>
        [TestVariable("cdf4a8df-890e-4153-b350-cda5a74da689")]
        public string Address
        {
            get { return _Address; }
            set { _Address = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(0));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Controller Software Version ') on item 'ComPentairPentairhome.ControllerSoftwareVersion'.", repo.ComPentairPentairhome.ControllerSoftwareVersionInfo, new RecordItemIndex(1));
            Validate.AttributeContains(repo.ComPentairPentairhome.ControllerSoftwareVersionInfo, "AccessibilityLabel", "Controller Software Version ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$Controller_Software_Version) on item 'ComPentairPentairhome.ControllerSoftwareVersion'.", repo.ComPentairPentairhome.ControllerSoftwareVersionInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.ComPentairPentairhome.ControllerSoftwareVersionInfo, "AccessibilityLabel", Controller_Software_Version);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'IoT Software Version ') on item 'ComPentairPentairhome.IoTSoftwareVersion'.", repo.ComPentairPentairhome.IoTSoftwareVersionInfo, new RecordItemIndex(4));
            Validate.AttributeContains(repo.ComPentairPentairhome.IoTSoftwareVersionInfo, "AccessibilityLabel", "IoT Software Version ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$IoT_Software_Version) on item 'ComPentairPentairhome.IoTSoftwareVersion'.", repo.ComPentairPentairhome.IoTSoftwareVersionInfo, new RecordItemIndex(5));
            Validate.AttributeContains(repo.ComPentairPentairhome.IoTSoftwareVersionInfo, "AccessibilityLabel", IoT_Software_Version);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ComPentairPentairhome.NicknameTestWSAutomation'.", repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, "Enabled", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Nickname') on item 'ComPentairPentairhome.NicknameTestWSAutomation'.", repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, new RecordItemIndex(8));
            Validate.AttributeContains(repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, "AccessibilityLabel", "Nickname");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$NickName) on item 'ComPentairPentairhome.NicknameTestWSAutomation'.", repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.ComPentairPentairhome.NicknameTestWSAutomationInfo, "AccessibilityLabel", NickName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(10));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ComPentairPentairhome.Address'.", repo.ComPentairPentairhome.AddressInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ComPentairPentairhome.AddressInfo, "Enabled", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>'Address ') on item 'ComPentairPentairhome.Address'.", repo.ComPentairPentairhome.AddressInfo, new RecordItemIndex(12));
            Validate.AttributeContains(repo.ComPentairPentairhome.AddressInfo, "AccessibilityLabel", "Address ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (AccessibilityLabel>$Address) on item 'ComPentairPentairhome.Address'.", repo.ComPentairPentairhome.AddressInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.ComPentairPentairhome.AddressInfo, "AccessibilityLabel", Address);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(14));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.BackArrow_PO' at Center", repo.ComPentairPentairhome.BackArrow_POInfo, new RecordItemIndex(15));
            repo.ComPentairPentairhome.BackArrow_PO.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(16));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
